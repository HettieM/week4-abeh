1. create a router
2. rename handler function to router
3. move router function to router.js and export it
4. import router in server.js
(uninstall nodemon and do npx nodemon server.js instead)

5. in router - import fs and path
6. make sure querystring variable is in create post route

Break down module
homeHandler
1. Create a handlers folder
2. touch homeHandler.js and create a homeHandler function
3. move all logic from endpoint / to homeHandler
4. in router.js import homeHandler insert it in the endpoint / and passon filePath as a variable


creat-post
1. in handlers folder touch createPost
2. in createPost create a function createPost && paste the logic thenexport it
3 import the function in router
4. in router add (method === "POST" && endpoint === "/create-post")  to the conditional

add missing handler - follow same steps as above 

5. on('end') add the below to write a file with blog entries
   const data = new URLSearchParams(body);
    const name = data.get("blogpost");
    fs.appendFile("log.txt", name, function(err) {
      if (err) {
        // append failed
      } else {
        response.writeHead(200, { "content-type": "text/html" });
        response.end(`<h1>Hello ${name}</h1>`);
      }
    });

    fs.readFile("./public/index.html", "utf8", (err, html) => {
      if (err) {
        throw err;
      }

      const root = parse(html);
      const body = root.querySelector("body");
      //   body.set_content('<div id = "asdf"></div>');
      body.appendChild('<div id = "sdfdffd"></div>');

      console.log(root.toString()); // This you can write back to file!
       fs.writeFile("./public/index.html", result, "utf8", function(err) {
        if (err) return console.log(err);
        response.writeHead(302, { location: "/" });
        response.end();
      });
  });

  const querystring = require("querystring");
const fs = require("fs");

function createPost(request, response) {
  let body = "";
  request.on("data", function(chunkOfData) {
    body += chunkOfData;
  });
  request.on("end", function() {
    // let convertedData = querystring.parse(allTheData);
    // console.log(convertedData);
    response.writeHead(302, { location: "/" });
    response.end();
    const data = new URLSearchParams(body);
    const name = data.get("blogpost");
    // fs.appendFile("./data/blogPosts.txt", name, function(err) {
    //   if (err) {
    //     // append failed
    //   } else {
    //     // response.writeHead(200, { "content-type": "text/html" });
    //     // response.end(`<h1>Hello ${name}</h1>`);
    //     response.writeHead(302, { location: "/" });
    //     response.end();
    //   }
    // });
    // fs.readFile("./public/index.html", "utf8", function(err, data) {
    //   if (err) {
    //     return console.log(err);
    //   }
    //   var toPrepand = "<script>console.log('hello world')</script>";
    //   data = data.replace(/\<\/body>/g, toPrepand + "</body>");
    //   console.log(data);
    //   response.writeHead(302, { location: "/" });
    //   response.end();
    // });
    // fs.readFile("./public/index.html", "utf8", function(err, data) {
    //   if (err) {
    //     return console.log(err);
    //   }

    //   var toPrepand = "blah";
    //   var result = data.replace(/\<\/body>/g, toPrepand + "</body>");

    //   fs.writeFile("./public/index.html", result, "utf8", function(err) {
    //     if (err) return console.log(err);
    //     response.writeHead(302, { location: "/" });
    //     response.end();
    //   });
    // });
    const fs = require("fs");
    const parse = require("node-html-parser").parse;

    fs.readFile("./public/index.html", "utf8", (err, html) => {
      if (err) {
        throw err;
      }

      const root = parse(html);
      const body = root.querySelector("body");
      //   body.set_content('<div id = "asdf"></div>');
      body.appendChild('<div id = "sdfdffd"></div>');

      console.log(root.toString()); // This you can write back to file!
       fs.writeFile("./public/index.html", result, "utf8", function(err) {
        if (err) return console.log(err);
        response.writeHead(302, { location: "/" });
        response.end();
      });
  });
}

module.exports = createPost;
